module semantics/runtime/environment

imports
  semantics/values

signature
  sorts Variable
  constructors
    Def : Value -> Variable
    Var : Value -> Variable

  sort aliases
    Env = Map<String, Variable>
  variables
    E : Env
  constructors
    bindVar    : String * Variable --> Env
    readVar    : String --> Variable
    readValue  : String --> Value
    bindValues : List(String) * List(Value) --> Env

rules

  E |- bindVar(name, var) --> { name |--> var, E }.

  E |- readVar(name) --> E[name].

  readValue(name) --> value
    where readVar(name) --> Def(value).
  readValue(name) --> value
    where readVar(name) --> Var(value).

  bindValues([], []) --> {}.
  bindValues([name | names], [value | values]) --> { name |--> Def(value), E }
    where bindValues(names, values) --> E.
