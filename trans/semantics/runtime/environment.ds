module semantics/runtime/environment

imports
  semantics/values

signature
  sorts Self
  constructors
    Self : Location -> Self {implicit}
    Init : Self

signature
  sort aliases
    Env = Map<Name, Location>
  variables
    E : Env

  constructors
    bindMethod    : Location * Name --> Env
    bindMethods   : Location * List(Name) --> Env
    resolveMethod : Name --> Location

rules

  E |- bindMethod(location, name) --> { name |--> location, E }.

  E |- bindMethods(_, []) --> E.
  bindMethods(location, [name | names]) --> { name |--> location, E }
    where bindMethods(location, names) --> E.

  E |- resolveMethod(name) --> E[name].
