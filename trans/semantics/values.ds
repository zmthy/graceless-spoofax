module semantics/values

imports
  src-gen/ds-signatures/Graceless-sig

signature
  constructors
    idsToStrings : List(ID) --> List(String)
    parametersToStrings : Parameters --> List(String)
    concat : List(RMethod) * List(RMethod) --> Object

rules

  idsToStrings([]) --> [].
  idsToStrings([name : String | names]) --> [name | idsToStrings(names)].

  parametersToStrings(NoParameters()) --> [].
  parametersToStrings(Parameters(names)) --> idsToStrings(names).

  concat([], methods) --> methods.
  concat([method | methods1], methods2) --> [method | methods]
    where concat(methods1, methods2) --> methods.

signature
  sorts Location
  constructors
    Location : Int -> Location {implicit}

signature
  sorts Name
  constructors
    Name : String -> Name
    Assign : String -> Name

signature
  sort aliases Object = List(RMethod)

  constructors
    initObject : List(Method) --> Object
    initObject : List(Method) * List(Decl) --> Object
    lookup     : List(RMethod) * Name --> RMethod
    matchArgs  : List(String) * List(Location) --> List(Method)

rules

  initObject([]) --> [].
  initObject([Method(name : String, params, body) | methods]) -->
    [RMethod(Name(name), parametersToStrings(params), Body(body)) | methods']
      where initObject(methods) --> methods'.
  initObject([AssignMethod(name : String, param : String, body) | methods]) -->
    [RMethod(Assign(name), [param], Body(body)) | methods']
      where initObject(methods) --> methods'.

  initObject(methods, decls) --> concat(methods', decls')
    where initObject(methods) --> methods';
          declsToMethods(decls) --> decls'.

  lookup([method@RMethod(mname, _, _) | _], name) --> method
    where name == mname.
  lookup([RMethod(mname, _, _) | methods], name) --> lookup(methods, name)
    where name != mname.

signature
  sorts RMethod
  constructors
    RMethod : Name * List(String) * RTerm -> RMethod

  constructors
    names : List(RMethod) --> List(Name)
    methodNames : Object --> List(Name)

    declToMethods : Decl --> List(RMethod)
    declsToMethods : List(Decl) --> List(RMethod)

rules

  names([]) --> [].
  names([RMethod(name, _, _) | methods]) --> [name | names]
    where names(methods) --> names.

  methodNames(object) --> names(object).

  declToMethods(Def(name : String, _)) -->
    [RMethod(Name(name), [], Uninitialised())].
  declToMethods(Var(name, _)) --> declToMethods(Var(name)).
  declToMethods(Var(name : String)) -->
    [RMethod(Name(name), [], Uninitialised()),
     RMethod(Assign(name), ["x"],
             Assign(Self(), name, Request("x", NoArguments()), Self()))].

  declsToMethods([]) --> [].
  declsToMethods([decl | decls]) --> declToMethods(decl) + methods
    where declsToMethods(decls) --> methods.

signature
  sorts RTerm
  constructors
    Uninitialised : RTerm
    Ref : Location -> RTerm
    Term : Term -> RTerm
    Body : Body -> RTerm
    RRequest : Location * Name * List(Location) --> RTerm
    Assign : Term * String * Term * Term -> RTerm

signature
  sorts Value Values
  constructors
    Object : Location -> Value
    Error : Value
    Objects : List(Location) -> Values
    Errors : Values
