module semantics/values

imports
  src-gen/ds-signatures/Graceless-sig

signature
  constructors
    idsToStrings : List(ID) --> List(String)
    parametersToStrings : Parameters --> List(String)
    concat : List(RMethod) * List(RMethod) --> List(RMethod)

rules

  idsToStrings([]) --> [].
  idsToStrings([name : String | names]) --> [name | idsToStrings(names)].

  parametersToStrings(NoParameters()) --> [].
  parametersToStrings(Parameters(names)) --> idsToStrings(names).

  concat([], methods) --> methods.
  concat([method | methods1], methods2) --> [method | methods]
    where concat(methods1, methods2) --> methods.

signature
  sorts Location
  constructors
    Location : Int -> Location {implicit}

signature
  sorts Name
  constructors
    Name : String -> Name
    Assign : String -> Name

signature
  sorts Object
  constructors
    Methods : List(RMethod) -> Object

  constructors
    initMethods : List(Method) --> List(RMethod)
    initObject  : List(Method) --> Object
    initObject  : List(Method) * List(Decl) --> Object
    lookup      : List(RMethod) * Name --> RMethod
    matchArgs   : List(String) * List(Location) --> List(RMethod)

rules

  initMethods([]) --> [].
  initMethods([Method(name : String, params, Body(decls, term)) | methods]) -->
    [RMethod(Name(name), params', RBody(decls, Term(term))) | methods']
      where parametersToStrings(params) --> params';
            initMethods(methods) --> methods'.
  initMethods([AssignMethod(name : String,
                            param : String,
                            Body(decls, term)) | methods]) -->
    [RMethod(Assign(name), [param], RBody(decls, Term(term))) | methods']
      where initMethods(methods) --> methods'.

  initObject(methods) --> Methods(initMethods(methods)).

  initObject(methods, decls) --> Methods(concat(methods', decls'))
    where initMethods(methods) --> methods';
          declsToMethods(decls) --> decls'.

  lookup([method@RMethod(mname, _, _) | _], name) --> method
    where name == mname.
  lookup([RMethod(mname, _, _) | methods], name) --> lookup(methods, name)
    where name != mname.

  matchArgs([], []) --> [].
  matchArgs([name | names], [location | locations]) -->
    [RMethod(Name(name), [], RBody([], Ref(location))) | methods]
      where matchArgs(names, locations) --> methods.

signature
  sorts RMethod
  constructors
    RMethod : Name * List(String) * RBody -> RMethod

  constructors
    names : List(RMethod) --> List(Name)
    methodNames : Object --> List(Name)

    declToMethods : Decl --> List(RMethod)
    declsToMethods : List(Decl) --> List(RMethod)

rules

  names([]) --> [].
  names([RMethod(name, _, _) | methods]) --> [name | names]
    where names(methods) --> names.

  methodNames(Methods(object)) --> names(object).

  declToMethods(Def(name : String, _)) -->
    [RMethod(Name(name), [], Uninitialised())].
  declToMethods(Var(name, _)) --> declToMethods(Var(name)).
  declToMethods(Var(name : String)) -->
    [RMethod(Name(name), [], Uninitialised()),
     RMethod(Assign(name), ["x"], RBody([], Assign(Term(Self()),
                                                   name,
                                                   Request("x", NoArguments()),
                                                   Term(Self()))))].

  declsToMethods([]) --> [].
  declsToMethods([decl | decls]) --> concat(declToMethods(decl), methods)
    where declsToMethods(decls) --> methods.

signature
  sorts RBody RTerm ObjectBody
  constructors
    Uninitialised : RBody
    RBody : List(Decl) * RTerm -> RBody
    Term : Term -> RTerm
    Ref : Location -> RTerm
    RRequest : Location * Name * List(Location) -> RTerm
    Assign : RTerm * String * Term * RTerm -> RTerm
    ObjectBody : RTerm -> ObjectBody

  constructors
    declToAssign : Location * Decl * RTerm --> RTerm
    declsToAssign : Location * List(Decl) * RTerm --> RTerm

    // The ObjectBody type is used to prevent the body from being automatically
    // transformed into a Value, as this will not correctly bind the environment
    // as necessary.  The expectation is that the runtime term inside the
    // ObjectBody constructor will be immediately evaluated to a value after
    // it is constructed here.
    declsToBody : Location * List(Decl) * RTerm --> ObjectBody

rules

  declToAssign(self, Def(name : String, term), next) -->
    Assign(Ref(self), name, term, next).
  declToAssign(_, Var(_), next) --> next.
  declToAssign(self, Var(name : String, term), next) -->
    Assign(Ref(self), name, term, next).

  declsToAssign(_, [], next) --> next.
  declsToAssign(self, [decl | decls], next) -->
    declToAssign(self, decl, assign)
      where declsToAssign(self, decls, next) --> assign.

  declsToBody(self, decls, next) -->
    ObjectBody(declsToAssign(self, decls, next)).

signature
  sorts Value Values
  constructors
    Object : Location -> Value
    Error : Value
    Objects : List(Location) -> Values
    Errors : Values
