module semantics/interpret

imports
  src-gen/ds-signatures/Graceless-sig
  semantics/runtime/environment
  semantics/values

signature
  arrows
    Program --> Value
    Body --> Value
    Expression --> Value
    List(Expression) --> List(Value)
    List(Parameter) --> List(String)

rules

  Module(_, methods, expr) --> object
    where initObject(methods) --> module;
          Self module |- expr --> object.

  Body([], object) --> object.
  Body([Def(name : String, _, expr) | stmts], result) --> value'
    where expr --> value;
          Env bindVar(name, Def(value)) |- Body(stmts, result) --> value'.
  Body([Var(name : String, _, expr) | stmts], result) --> value'
    where expr --> value;
          Env bindVar(name, Var(value)) |- Body(stmts, result) --> value'.
  Body([Assign(name : String, expr) | stmts], result) --> value'
    where expr --> value;
          readVar(name) --> Var(_);
          Env bindVar(name, Var(value)) |- Body(stmts, result) --> value'.

  Object(methods) --> initObject(methods).

  Request(receiver@Methods(methods),
          name : String,
          args : List(Value)) --> object
    where methods[name] => Method(Signature(_, params, _), body);
          Self receiver, Env bindValues(params, args) |- body --> object.

  Variable(name : String) --> readValue(name).

  Self Self(self) |- Self() --> self.

rules

  [] : List(Expression) --> [].
  [expr | exprs] : List(Expression) --> [object | objects]
    where expr --> object;
          exprs --> objects.

  [] : List(Parameter) --> [].
  [Parameter(name : String, _) | params] : List(Parameter) --> [name | names]
    where params --> names.
