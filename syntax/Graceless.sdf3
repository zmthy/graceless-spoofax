module Graceless

imports
  Common

context-free start-symbols
  Term

context-free syntax
  // Regular method declaration, with a name, parameters, and a body.
  Method.Method = [method [ID][Parameters] { [Body] }]

  // Assign method, with a single parameter.  Typically used internally to build
  // assignment methods for mutable fields, but can be declared by the user.
  Method.AssignMethod = [method [ID]:=([ID]) { [Body] }]

  // Parameters are either present with parentheses, or empty.
  Parameters.Parameters = [([ID+])]
  Parameters.NoParameters = []

  // A method body consisting of a sequence of variable declarations followed by
  // a return expression.
  Body.Body = [[Decl*] [Term]]

  // Declaration of a constant field or variable with the given value.
  Decl.Def = [def [ID] = [Term]]

  // Declaration of a mutable field or variable with no initial value.
  Decl.Var = [var [ID]]

  // Declaration of a mutable field or variable with the given value.
  Decl.Var = [var [ID] := [Term]]

  // Object literal expression.
  Term.Object = [object { [Method*] [Decl*] }]

  // Requests qualified by a receiver.
  Term.Request = [[Term].[ID][Arguments]]

  // Requests not qualified by a receiver.
  Term.Request = [[ID][Arguments]]

  // Requests to assign methods, qualified by a receiver.
  Term.AssignRequest = [[Term].[ID] := [Term]]

  // Requests to an assign methods, not qualified by a receiver.
  Term.AssignRequest = [[ID] := [Term]]

  // Access to the surrounding (explicitly declared) object.
  Term.Self = [self]

  // Arguments are either present with parentheses, or empty.
  Arguments.Arguments = [([Term+])]
  Arguments.NoArguments = []
